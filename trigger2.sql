/* 
1. Разработать и реализовать триггеры для операций INSERT, UPDATE, DELETE для проверки сложных ограничений, накладываемых на схему предметной области 
(не менее двух триггеров для каждого типа операции). 
2. Не менее трех триггеров (любого типа) должны выполнять действия компенсирующего типа в связанных таблицах. 
3. По одному триггеру для каждой операции должны быть триггерами instead of 
(триггеры должны содержать логику обработки данных - например, выполнение компенсирующих операций, расчетные данные, обработку сложного удаления или обновления данных). 
4. Разработать набор сообщений об ошибках при нарушении ограничений.
ВСЕ триггеры должны иметь смысл с точки зрения бизнес-логики описываемой предметной области. Запрещается использовать в триггерах искусственные ограничения, не имеющие отношения к содержанию задачи.
*/

-- TRIGGERS FOR INSERT
CREATE TRIGGER insert_trigger_check_instance
ON Issue FOR INSERT
AS
IF @@ROWCOUNT=1
BEGIN 
	IF NOT EXISTS(SELECT * FROM inserted 
		WHERE inserted.Passport_ID = ANY(SELECT Passport_ID FROM Instance_Passport))
		BEGIN
			ROLLBACK TRAN
		PRINT
			'Отмена записи: в базе нет экземпляра книги с таким ID'
		END
END 

DROP TRIGGER insert_trigger_check_instance
INSERT Issue VALUES (7, 3, 1, '04.04.2020', '04.05.2020', NULL, NULL)
INSERT Issue VALUES (4, 3, 3, '04.04.2020', '04.05.2020', NULL, NULL)

SELECT * FROM Issue
